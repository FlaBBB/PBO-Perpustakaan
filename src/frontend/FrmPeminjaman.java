/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend;

import backend.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;

/**
 *
 * @author FlaB
 */
public class FrmPeminjaman extends javax.swing.JFrame {

    /**
     * Creates new form FrmBuku
     */
    public FrmPeminjaman() {
        initComponents();
        tampilkanListPegawai();
        tampilData();
        kosongkanForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    public void kosongkanForm() {
        txtIdPeminjaman.setText("0");
        txtIdAnggota.setText("0");
        txtIdBuku.setText("0");
        txtTanggalPinjam.setText("");
        listPegawai.setSelectedItem("");
        this.idAnggota = 0;
        this.idBuku = 0;
    }

    public void tampilData() {
        String[] kolom = { "ID", "Id Anggota", "Id Buku", "Id Pegawai", "Tanggal Pinjam", "Tanggal Kembali" };
        ArrayList<Peminjaman> list = new Peminjaman().getAll();
        Object rowData[] = new Object[6];

        tblPeminjaman.setModel(new DefaultTableModel(new Object[][] {}, kolom));

        if (!list.isEmpty()) {
            for (int i = 0; i < list.size(); i++) {
                rowData[0] = list.get(i).getIdPeminjaman();
                rowData[1] = list.get(i).getAnggota().getNama();
                rowData[2] = list.get(i).getBuku().getJudul();
                rowData[3] = list.get(i).getPegawai() != null ? list.get(i).getPegawai().getIdPegawai() : "NULL";
                rowData[4] = list.get(i).getTanggalPinjam();
                rowData[5] = list.get(i).getTanggalKembali();

                ((DefaultTableModel) tblPeminjaman.getModel()).addRow(rowData);
            }
        }
    }

    public void tampilkanListPegawai() {
        listPegawai.setModel(new DefaultComboBoxModel(new Pegawai().getAll().toArray()));
    }

    public void cari(String keyword) {
        String[] kolom = { "ID", "Id Anggota", "Id Buku", "Id Pegawai", "Tanggal Pinjam", "Tanggal Kembali" };
        ArrayList<Peminjaman> list = new Peminjaman().search(keyword);
        Object rowData[] = new Object[6];

        tblPeminjaman.setModel(new DefaultTableModel(new Object[][] {}, kolom));

        if (list.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tidak ada data yang sesuai dengan kata kunci: " + keyword);
        } else {
            for (int i = 0; i < list.size(); i++) {
                rowData[0] = list.get(i).getIdPeminjaman();
                rowData[1] = list.get(i).getAnggota().getNama();
                rowData[2] = list.get(i).getBuku().getJudul();
                rowData[3] = list.get(i).getPegawai() != null ? list.get(i).getPegawai().getIdPegawai() : "NULL";
                rowData[4] = list.get(i).getTanggalPinjam();
                rowData[5] = list.get(i).getTanggalKembali();

                ((DefaultTableModel) tblPeminjaman.getModel()).addRow(rowData);
            }
            //        JOptionPane.showMessageDialog(this, list.size() + " data ditemukan.");
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtIdPeminjaman = new javax.swing.JTextField();
        txtIdBuku = new javax.swing.JTextField();
        txtTanggalPinjam = new javax.swing.JTextField();
        btnSimpan = new javax.swing.JButton();
        btnTambahBaru = new javax.swing.JButton();
        txtCari = new javax.swing.JTextField();
        btnCari = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPeminjaman = new javax.swing.JTable();
        txtIdAnggota = new javax.swing.JTextField();
        btnCariAnggota = new javax.swing.JButton();
        btnCariBuku = new javax.swing.JButton();
        labelnama = new javax.swing.JLabel();
        labelBuku = new javax.swing.JLabel();
        labelTanggalPeminjaman = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        listPegawai = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("ID Peminjaman");

        jLabel2.setText("ID Anggota");

        jLabel3.setText("ID Buku");

        jLabel4.setText("Tanggal Peminjaman");

        txtIdPeminjaman.setEnabled(false);

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnTambahBaru.setText("Tambah Baru");
        btnTambahBaru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahBaruActionPerformed(evt);
            }
        });

        txtCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariActionPerformed(evt);
            }
        });

        btnCari.setText("Cari");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        tblPeminjaman.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPeminjaman.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPeminjamanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPeminjaman);

        btnCariAnggota.setText("Cari");
        btnCariAnggota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariAnggotaActionPerformed(evt);
            }
        });

        btnCariBuku.setText("Cari");
        btnCariBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariBukuActionPerformed(evt);
            }
        });

        labelTanggalPeminjaman.setText("YYYY-MM-DD");

        jLabel5.setText("Pegawai");

        listPegawai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        listPegawai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listPegawaiActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("FORM PEMINJAMAN");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelnama)
                                    .addComponent(labelBuku)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtIdAnggota, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnCariAnggota))
                                    .addComponent(txtIdPeminjaman, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtIdBuku, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                                            .addComponent(listPegawai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtTanggalPinjam))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(labelTanggalPeminjaman)
                                            .addComponent(btnCariBuku)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnTambahBaru)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCari)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCari))
                            .addComponent(btnSimpan)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(180, 180, 180))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdPeminjaman, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdAnggota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCariAnggota)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelnama)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCariBuku)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelBuku)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTanggalPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(labelTanggalPeminjaman))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listPegawai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSimpan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTambahBaru)
                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCari))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkDateFormat(String inputTanggal) {
        if (inputTanggal.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tanggal tidak boleh kosong.", "Peringatan",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date tanggal = dateFormat.parse(inputTanggal);

            labelTanggalPeminjaman.setText(dateFormat.format(tanggal));
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Format tanggal tidak valid. Gunakan format yyyy-MM-dd.", "Peringatan",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        try {
            if (this.idAnggota == 0 || this.idBuku == 0) {
                JOptionPane.showMessageDialog(this, "ID Anggota dan ID Buku tidak valid.", "Peringatan",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            int idPeminjaman = Integer.parseInt(txtIdPeminjaman.getText());

            String tanggalPinjam = txtTanggalPinjam.getText().trim();
            if (tanggalPinjam.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Tanggal Pinjam tidak boleh kosong.", "Peringatan",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }

            this.checkDateFormat(tanggalPinjam);

            Peminjaman peminjaman = new Peminjaman();

            peminjaman.setIdPeminjaman(idPeminjaman);
            peminjaman.getAnggota().setIdanggota(this.idAnggota);
            peminjaman.getBuku().setIdBuku(idBuku);
            peminjaman.setPegawai((Pegawai) listPegawai.getSelectedItem());

            peminjaman.setTanggalPinjam(tanggalPinjam);

            peminjaman.save();

            JOptionPane.showMessageDialog(this, "Data peminjaman berhasil disimpan.", "Sukses",
                    JOptionPane.INFORMATION_MESSAGE);

            txtIdPeminjaman.setText(Integer.toString(peminjaman.getIdPeminjaman()));

            tampilData();
            kosongkanForm();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Input ID harus berupa angka yang valid.", "Kesalahan Input",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menyimpan data peminjaman.", "Kesalahan",
                    JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnTambahBaruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahBaruActionPerformed
        kosongkanForm();
        btnSimpan.setEnabled(true);

        txtIdAnggota.setEnabled(true);
        txtIdBuku.setEnabled(true);
        txtTanggalPinjam.setEnabled(true);

        kosongkanForm();

    }//GEN-LAST:event_btnTambahBaruActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        cari(txtCari.getText());

    }//GEN-LAST:event_btnCariActionPerformed

    private void tblPeminjamanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPeminjamanMouseClicked
        DefaultTableModel model = (DefaultTableModel) tblPeminjaman.getModel();
        int row = tblPeminjaman.getSelectedRow();
        Peminjaman peminjaman = new Peminjaman();

        if (row >= 0) {
            peminjaman = Peminjaman.getById(Integer.parseInt(model.getValueAt(row, 0).toString()));

            txtIdPeminjaman.setText(String.valueOf(peminjaman.getIdPeminjaman()));
            txtIdAnggota.setText(String.valueOf(peminjaman.getAnggota().getIdanggota()));
            txtIdBuku.setText(String.valueOf(peminjaman.getBuku().getIdBuku()));
            txtTanggalPinjam.setText(peminjaman.getTanggalPinjam());
            listPegawai.getModel().setSelectedItem(peminjaman.getPegawai());

            txtIdPeminjaman.setEnabled(false);
            txtIdAnggota.setEnabled(false);
            txtIdBuku.setEnabled(false);
            txtTanggalPinjam.setEnabled(false);

            btnSimpan.setEnabled(false);
        } 

    }//GEN-LAST:event_tblPeminjamanMouseClicked

    private void btnCariAnggotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariAnggotaActionPerformed
        try {
            String input = txtIdAnggota.getText().trim();

            if (input.isEmpty()) {
                labelnama.setText("Input tidak boleh kosong. Masukkan ID yang valid.");
                return;
            }

            int idAnggota = Integer.parseInt(input);

            Anggota hasil = new Anggota().getById(idAnggota);

            if (hasil != null && hasil.getNama() != null) {
                this.idAnggota = idAnggota;
                labelnama.setText("Nama: " + hasil.getNama());
            } else {
                this.idAnggota = 0;
                labelnama.setText("Anggota dengan ID tersebut tidak ditemukan.");
            }
        } catch (NumberFormatException e) {
            labelnama.setText("Input harus berupa angka. Silakan masukkan ID anggota yang valid.");
        } catch (Exception e) {
            labelnama.setText("Terjadi kesalahan saat mencari data anggota.");
            e.printStackTrace(); // Log error untuk debugging
        }

    }//GEN-LAST:event_btnCariAnggotaActionPerformed

    private void btnCariBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariBukuActionPerformed
        try {
            String input = txtIdBuku.getText().trim();

            if (input.isEmpty()) {
                labelnama.setText("Input tidak boleh kosong. Masukkan ID yang valid.");
                return;
            }

            int idBuku = Integer.parseInt(input);

            Buku hasil = new Buku().getById(idBuku);

            if (hasil != null && hasil.getJudul() != null) {
                this.idBuku = idBuku;
                labelBuku.setText("Judul: " + hasil.getJudul());
            } else {
                this.idBuku = 0;
                labelBuku.setText("Buku dengan ID tersebut tidak ditemukan.");
            }
        } catch (NumberFormatException e) {
            labelBuku.setText("Input harus berupa angka. Silakan masukkan ID anggota yang valid.");
        } catch (Exception e) {
            labelBuku.setText("Terjadi kesalahan saat mencari data Buku.");
            e.printStackTrace(); 
        }
    }//GEN-LAST:event_btnCariBukuActionPerformed

    private void txtCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCariActionPerformed

    private void listPegawaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listPegawaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listPegawaiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPeminjaman().setVisible(true);
            }
        });
    }

    private int idAnggota;
    private int idBuku;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnCariAnggota;
    private javax.swing.JButton btnCariBuku;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnTambahBaru;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelBuku;
    private javax.swing.JLabel labelTanggalPeminjaman;
    private javax.swing.JLabel labelnama;
    private javax.swing.JComboBox<String> listPegawai;
    private javax.swing.JTable tblPeminjaman;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtIdAnggota;
    private javax.swing.JTextField txtIdBuku;
    private javax.swing.JTextField txtIdPeminjaman;
    private javax.swing.JTextField txtTanggalPinjam;
    // End of variables declaration//GEN-END:variables
}